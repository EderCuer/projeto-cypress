name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Configuração da aplicação
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: dbname
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checkout o repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # Build and run Docker Compose
      - name: Build and run Docker Compose
        run: docker-compose up --build -d
      
      # Save Docker state for other jobs
      - name: Save Docker Host
        run: echo "DOCKER_HOST=tcp://localhost:2375" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest
    name: Execução dos testes
    needs: build
    env:
      DOCKER_HOST: ${{ env.DOCKER_HOST }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Project Dependencies
      - name: Install dependencies
        run: npm install

      # Wait for services to be ready
      - name: Wait for API to be available
        run: |
          max_attempts=10
          count=0
          until curl --output /dev/null --silent --head --fail http://localhost:3333; do
            count=$((count + 1))
            if [ $count -ge $max_attempts ]; then
              echo "A API não ficou disponível após $max_attempts tentativas."
              exit 1
            fi
            echo "Aguardando a API estar disponível... Tentativa $count de $max_attempts."
            sleep 5
          done
      
      - name: Show API logs
        if: failure()
        run: docker-compose logs api

      # Run Cypress tests
      - name: Run Cypress tests
        run: npx cypress run

  teardown:
    runs-on: ubuntu-latest
    name: Finalizar serviços
    needs: test
    env:
      DOCKER_HOST: ${{ env.DOCKER_HOST }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Tear down Docker Compose
      - name: Tear down Docker Compose
        run: docker-compose down
