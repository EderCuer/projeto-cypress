name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      api_url: ${{ steps.api.outputs.api_url }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Instalação docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Remover containers antigos
        run: docker-compose down

  tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inicialização da aplicação
        run: docker-compose up --build -d

      - name: Esperar API ficar disponível
        run: |
          max_attempts=10
          count=0
          until curl --output /dev/null --silent --head --fail http://localhost:3333; do
            count=$((count + 1))
            if [ $count -ge $max_attempts ]; then
              echo "A API não ficou disponível após $max_attempts tentativas."
              exit 1
            fi
            echo "Aguardando a API estar disponível... Tentativa $count de $max_attempts."
            sleep 5
          done

      - name: Análise de Código com SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=EderCuer_projeto-cypress
            -Dsonar.organization=edercuer
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Instalação das dependências
        run: npm install

      - name: Execução dos testes
        run: npm run cy:regression

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cypress/reports
          publish_branch: gh-pages

  teardown:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Finalizar docker
        run: docker-compose down
