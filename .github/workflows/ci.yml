name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  testes:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:lts
        ports:
          - 9000:9000
        options: >
          --health-cmd="curl http://localhost:9000/api/system/health | grep -q 'GREEN'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=50

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Instalação docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Inicialização da aplicação
        run: docker-compose up --build -d

      - name: Esperar API ficar disponível
        run: |
          max_attempts=10
          count=0
          until curl --output /dev/null --silent --head --fail http://localhost:3333; do
            count=$((count + 1))
            if [ $count -ge $max_attempts ]; then
              echo "A API não ficou disponível após $max_attempts tentativas."
              exit 1
            fi
            echo "Aguardando a API estar disponível... Tentativa $count de $max_attempts."
            sleep 5
          done

      - name: Instalação das dependências
        run: npm install

      - name: Execução dos testes
        run: npm run cy:regression
      
      - name: Analisar código com SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=projeto-cypress \
            -Dsonar.sources=./cypress \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cypress/reports
          publish_branch: gh-pages

      - name: Finalizar docker
        run: docker-compose down